// Mocks generated by Mockito 5.4.5 from annotations
// in partners/test/partnerships_list_page_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i8;
import 'dart:ui' as _i9;

import 'package:firebase_auth/firebase_auth.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i6;
import 'package:partners/model/partnership.dart' as _i3;
import 'package:partners/model/task_category.dart' as _i7;
import 'package:partners/model/task_details.dart' as _i4;
import 'package:partners/provider/task_provider.dart' as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeUserCredential_0 extends _i1.SmartFake
    implements _i2.UserCredential {
  _FakeUserCredential_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakePartnership_1 extends _i1.SmartFake implements _i3.Partnership {
  _FakePartnership_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeTaskDetails_2 extends _i1.SmartFake implements _i4.TaskDetails {
  _FakeTaskDetails_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [TaskProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockTaskProvider extends _i1.Mock implements _i5.TaskProvider {
  MockTaskProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.UserCredential get user =>
      (super.noSuchMethod(
            Invocation.getter(#user),
            returnValue: _FakeUserCredential_0(this, Invocation.getter(#user)),
          )
          as _i2.UserCredential);

  @override
  set user(_i2.UserCredential? _user) => super.noSuchMethod(
    Invocation.setter(#user, _user),
    returnValueForMissingStub: null,
  );

  @override
  int get currentPartnershipIndex =>
      (super.noSuchMethod(
            Invocation.getter(#currentPartnershipIndex),
            returnValue: 0,
          )
          as int);

  @override
  String get firstName =>
      (super.noSuchMethod(
            Invocation.getter(#firstName),
            returnValue: _i6.dummyValue<String>(
              this,
              Invocation.getter(#firstName),
            ),
          )
          as String);

  @override
  String get username =>
      (super.noSuchMethod(
            Invocation.getter(#username),
            returnValue: _i6.dummyValue<String>(
              this,
              Invocation.getter(#username),
            ),
          )
          as String);

  @override
  List<_i3.Partnership> get partnerships =>
      (super.noSuchMethod(
            Invocation.getter(#partnerships),
            returnValue: <_i3.Partnership>[],
          )
          as List<_i3.Partnership>);

  @override
  _i3.Partnership get currentPartnership =>
      (super.noSuchMethod(
            Invocation.getter(#currentPartnership),
            returnValue: _FakePartnership_1(
              this,
              Invocation.getter(#currentPartnership),
            ),
          )
          as _i3.Partnership);

  @override
  List<_i7.TaskCategory> get categories =>
      (super.noSuchMethod(
            Invocation.getter(#categories),
            returnValue: <_i7.TaskCategory>[],
          )
          as List<_i7.TaskCategory>);

  @override
  List<_i4.TaskDetails> get tasks =>
      (super.noSuchMethod(
            Invocation.getter(#tasks),
            returnValue: <_i4.TaskDetails>[],
          )
          as List<_i4.TaskDetails>);

  @override
  List<_i4.TaskDetails> get ongoingTasks =>
      (super.noSuchMethod(
            Invocation.getter(#ongoingTasks),
            returnValue: <_i4.TaskDetails>[],
          )
          as List<_i4.TaskDetails>);

  @override
  List<_i4.TaskDetails> get upcomingTasks =>
      (super.noSuchMethod(
            Invocation.getter(#upcomingTasks),
            returnValue: <_i4.TaskDetails>[],
          )
          as List<_i4.TaskDetails>);

  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);

  @override
  void setPartnershipId(String? id) => super.noSuchMethod(
    Invocation.method(#setPartnershipId, [id]),
    returnValueForMissingStub: null,
  );

  @override
  void setFirstName(String? firstName) => super.noSuchMethod(
    Invocation.method(#setFirstName, [firstName]),
    returnValueForMissingStub: null,
  );

  @override
  void setUsername(String? username) => super.noSuchMethod(
    Invocation.method(#setUsername, [username]),
    returnValueForMissingStub: null,
  );

  @override
  _i8.Future<void> setCurrentPartnership(int? index) =>
      (super.noSuchMethod(
            Invocation.method(#setCurrentPartnership, [index]),
            returnValue: _i8.Future<void>.value(),
            returnValueForMissingStub: _i8.Future<void>.value(),
          )
          as _i8.Future<void>);

  @override
  _i8.Future<void> setUser(_i2.UserCredential? user) =>
      (super.noSuchMethod(
            Invocation.method(#setUser, [user]),
            returnValue: _i8.Future<void>.value(),
            returnValueForMissingStub: _i8.Future<void>.value(),
          )
          as _i8.Future<void>);

  @override
  List<_i4.TaskDetails> getTasksByCategory(String? category) =>
      (super.noSuchMethod(
            Invocation.method(#getTasksByCategory, [category]),
            returnValue: <_i4.TaskDetails>[],
          )
          as List<_i4.TaskDetails>);

  @override
  int getTaskCount(String? categoryTitle) =>
      (super.noSuchMethod(
            Invocation.method(#getTaskCount, [categoryTitle]),
            returnValue: 0,
          )
          as int);

  @override
  _i8.Future<void> addTask(
    String? title,
    String? category,
    String? description,
    String? createdBy,
    DateTime? startTime,
    dynamic assignedTo, [
    DateTime? endTime,
  ]) =>
      (super.noSuchMethod(
            Invocation.method(#addTask, [
              title,
              category,
              description,
              createdBy,
              startTime,
              assignedTo,
              endTime,
            ]),
            returnValue: _i8.Future<void>.value(),
            returnValueForMissingStub: _i8.Future<void>.value(),
          )
          as _i8.Future<void>);

  @override
  _i8.Future<void> deleteTask(String? taskId) =>
      (super.noSuchMethod(
            Invocation.method(#deleteTask, [taskId]),
            returnValue: _i8.Future<void>.value(),
            returnValueForMissingStub: _i8.Future<void>.value(),
          )
          as _i8.Future<void>);

  @override
  void addCategory(String? title, _i9.Color? color) => super.noSuchMethod(
    Invocation.method(#addCategory, [title, color]),
    returnValueForMissingStub: null,
  );

  @override
  List<_i4.TaskDetails> getOngoingTasks() =>
      (super.noSuchMethod(
            Invocation.method(#getOngoingTasks, []),
            returnValue: <_i4.TaskDetails>[],
          )
          as List<_i4.TaskDetails>);

  @override
  List<_i4.TaskDetails> getUpcomingTasks() =>
      (super.noSuchMethod(
            Invocation.method(#getUpcomingTasks, []),
            returnValue: <_i4.TaskDetails>[],
          )
          as List<_i4.TaskDetails>);

  @override
  _i8.Future<void> changeCompletion(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#changeCompletion, [id]),
            returnValue: _i8.Future<void>.value(),
            returnValueForMissingStub: _i8.Future<void>.value(),
          )
          as _i8.Future<void>);

  @override
  _i4.TaskDetails getTaskById(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#getTaskById, [id]),
            returnValue: _FakeTaskDetails_2(
              this,
              Invocation.method(#getTaskById, [id]),
            ),
          )
          as _i4.TaskDetails);

  @override
  List<_i4.TaskDetails> getTasksForDate(DateTime? selectedDate) =>
      (super.noSuchMethod(
            Invocation.method(#getTasksForDate, [selectedDate]),
            returnValue: <_i4.TaskDetails>[],
          )
          as List<_i4.TaskDetails>);

  @override
  _i8.Future<void> fetchPartnerships() =>
      (super.noSuchMethod(
            Invocation.method(#fetchPartnerships, []),
            returnValue: _i8.Future<void>.value(),
            returnValueForMissingStub: _i8.Future<void>.value(),
          )
          as _i8.Future<void>);

  @override
  void fetchTasks() => super.noSuchMethod(
    Invocation.method(#fetchTasks, []),
    returnValueForMissingStub: null,
  );

  @override
  void fetchCategories() => super.noSuchMethod(
    Invocation.method(#fetchCategories, []),
    returnValueForMissingStub: null,
  );

  @override
  _i8.Future<bool> checkUsernameTaken(String? username) =>
      (super.noSuchMethod(
            Invocation.method(#checkUsernameTaken, [username]),
            returnValue: _i8.Future<bool>.value(false),
          )
          as _i8.Future<bool>);

  @override
  _i8.Future<_i2.UserCredential> signIn(String? email, String? password) =>
      (super.noSuchMethod(
            Invocation.method(#signIn, [email, password]),
            returnValue: _i8.Future<_i2.UserCredential>.value(
              _FakeUserCredential_0(
                this,
                Invocation.method(#signIn, [email, password]),
              ),
            ),
          )
          as _i8.Future<_i2.UserCredential>);

  @override
  _i8.Future<_i2.UserCredential> signUp(String? email, String? password) =>
      (super.noSuchMethod(
            Invocation.method(#signUp, [email, password]),
            returnValue: _i8.Future<_i2.UserCredential>.value(
              _FakeUserCredential_0(
                this,
                Invocation.method(#signUp, [email, password]),
              ),
            ),
          )
          as _i8.Future<_i2.UserCredential>);

  @override
  void addUser(
    String? username,
    String? email,
    String? firstName,
    String? lastName,
    String? uid,
  ) => super.noSuchMethod(
    Invocation.method(#addUser, [username, email, firstName, lastName, uid]),
    returnValueForMissingStub: null,
  );

  @override
  _i8.Stream<Map<String, dynamic>> fetchPartnershipStream(
    String? partnershipId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#fetchPartnershipStream, [partnershipId]),
            returnValue: _i8.Stream<Map<String, dynamic>>.empty(),
          )
          as _i8.Stream<Map<String, dynamic>>);

  @override
  _i8.Future<String> createPartnership(String? partnershipName) =>
      (super.noSuchMethod(
            Invocation.method(#createPartnership, [partnershipName]),
            returnValue: _i8.Future<String>.value(
              _i6.dummyValue<String>(
                this,
                Invocation.method(#createPartnership, [partnershipName]),
              ),
            ),
          )
          as _i8.Future<String>);

  @override
  _i8.Future<void> joinPartnership(String? code) =>
      (super.noSuchMethod(
            Invocation.method(#joinPartnership, [code]),
            returnValue: _i8.Future<void>.value(),
            returnValueForMissingStub: _i8.Future<void>.value(),
          )
          as _i8.Future<void>);

  @override
  _i8.Future<bool> hasPartnerships() =>
      (super.noSuchMethod(
            Invocation.method(#hasPartnerships, []),
            returnValue: _i8.Future<bool>.value(false),
          )
          as _i8.Future<bool>);

  @override
  _i8.Stream<List<_i4.TaskDetails>> getCompletedTasksStream() =>
      (super.noSuchMethod(
            Invocation.method(#getCompletedTasksStream, []),
            returnValue: _i8.Stream<List<_i4.TaskDetails>>.empty(),
          )
          as _i8.Stream<List<_i4.TaskDetails>>);

  @override
  _i8.Future<List<String>> getPartnershipUsers() =>
      (super.noSuchMethod(
            Invocation.method(#getPartnershipUsers, []),
            returnValue: _i8.Future<List<String>>.value(<String>[]),
          )
          as _i8.Future<List<String>>);

  @override
  void addListener(_i9.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(_i9.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  void notifyListeners() => super.noSuchMethod(
    Invocation.method(#notifyListeners, []),
    returnValueForMissingStub: null,
  );
}
